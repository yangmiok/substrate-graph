version: '3.4'
services:
  archive:
    image: 2075/archiver-substrate:latest
    container_name: archiver
    restart: unless-stopped
    command: ["-vv", "--config", "${ARCHIVER_CONFIG}", "--spec", "${CHAINSPEC}"]
    volumes:
      - ./config:/config
      - ./data/substrate/chains/dev/db:/archive/data
    links:
      - postgres
      - substrate
    depends_on:
      - postgres
      - substrate
    networks:
      - backend

  substrate:
    image: parity/substrate:latest
    container_name: substrate
    restart: unless-stopped
    ports:
      - 30333:30333
      - 9933:9933
      - 9944:9944
    command: ["--chain", "${CHAINSPEC}", "--base-path", "/data", "--name", "${NODE_NAME}", "--pruning", "archive", "--alice", "--validator", "--unsafe-rpc-external", "--unsafe-ws-external", "--rpc-cors", "all"]
    volumes:
      - ./config:/config
      - ./data/substrate:/data
    networks:
      - backend

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - '16543:5432'
    command: ["postgres", "-cshared_preload_libraries=pg_stat_statements"]
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: polkadot
    volumes:
      - ./data/pg:/var/lib/postgresql/data
    networks:
      - backend

  graphql:
    image: hasura/graphql-engine:v1.3.0
    container_name: graphql
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:123@postgres:5432/polkadot
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      # admin secret â€” remove when not in dev environment
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: 123
    networks:
      - frontend
      - backend

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - 18080:8080
    links:
      - postgres:postgres      

networks:
    backend:
    frontend:
